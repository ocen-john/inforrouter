'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
'
Namespace xxx
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="srvSoap", [Namespace]:="http://tempuri.org/IRDOTNET/srv")>  _
    Public Class srv
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://alex/irdotnet/srv.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/CreateFolder", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateFolder(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("CreateFolder", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginCreateFolder(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateFolder", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCreateFolder(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/DeleteFolder", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFolder(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("DeleteFolder", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginDeleteFolder(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteFolder", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDeleteFolder(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/FolderExists", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FolderExists(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("FolderExists", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginFolderExists(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FolderExists", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndFolderExists(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/GetFolders", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolders(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetFolders", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginGetFolders(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFolders", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFolders(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/GetDocuments", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocuments(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetDocuments", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginGetDocuments(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDocuments", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetDocuments(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/GetFoldersAndDocuments", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersAndDocuments(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetFoldersAndDocuments", New Object() {UID, PWD, Path})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginGetFoldersAndDocuments(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFoldersAndDocuments", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFoldersAndDocuments(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/GetDomains", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDomains(ByVal UID As String, ByVal PWD As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetDomains", New Object() {UID, PWD})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginGetDomains(ByVal UID As String, ByVal PWD As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDomains", New Object() {UID, PWD}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetDomains(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/Move", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Move(ByVal UID As String, ByVal PWD As String, ByVal SourcePath As String, ByVal DestinationPath As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Move", New Object() {UID, PWD, SourcePath, DestinationPath})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginMove(ByVal UID As String, ByVal PWD As String, ByVal SourcePath As String, ByVal DestinationPath As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Move", New Object() {UID, PWD, SourcePath, DestinationPath}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndMove(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/Copy", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Copy(ByVal UID As String, ByVal PWD As String, ByVal SourcePath As String, ByVal DestinationPath As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Copy", New Object() {UID, PWD, SourcePath, DestinationPath})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginCopy(ByVal UID As String, ByVal PWD As String, ByVal SourcePath As String, ByVal DestinationPath As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Copy", New Object() {UID, PWD, SourcePath, DestinationPath}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCopy(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/GetDocument", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocument(ByVal UID As String, ByVal PWD As String, ByVal Path As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetDocument", New Object() {UID, PWD, Path})
            Return CType(results(0),Byte())
        End Function
        
        '<remarks/>
        Public Function BeginGetDocument(ByVal UID As String, ByVal PWD As String, ByVal Path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDocument", New Object() {UID, PWD, Path}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetDocument(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/Login", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal UID As String, ByVal PWD As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Login", New Object() {UID, PWD})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginLogin(ByVal UID As String, ByVal PWD As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login", New Object() {UID, PWD}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndLogin(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/Users", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Users(ByVal UID As String, ByVal PWD As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("Users", New Object() {UID, PWD})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginUsers(ByVal UID As String, ByVal PWD As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Users", New Object() {UID, PWD}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndUsers(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/CreateUser", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUser(ByVal UID As String, ByVal PWD As String, ByVal FirstName As String, ByVal LastName As String, ByVal UserName As String, ByVal EmailAddress As String, ByVal Password As String, ByVal DomainID As Integer, ByVal ReadOnlyUser As Boolean, ByVal AuthenticationSource As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("CreateUser", New Object() {UID, PWD, FirstName, LastName, UserName, EmailAddress, Password, DomainID, ReadOnlyUser, AuthenticationSource})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginCreateUser(ByVal UID As String, ByVal PWD As String, ByVal FirstName As String, ByVal LastName As String, ByVal UserName As String, ByVal EmailAddress As String, ByVal Password As String, ByVal DomainID As Integer, ByVal ReadOnlyUser As Boolean, ByVal AuthenticationSource As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateUser", New Object() {UID, PWD, FirstName, LastName, UserName, EmailAddress, Password, DomainID, ReadOnlyUser, AuthenticationSource}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndCreateUser(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/DeleteUser", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUser(ByVal UID As String, ByVal PWD As String, ByVal UserID As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("DeleteUser", New Object() {UID, PWD, UserID})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginDeleteUser(ByVal UID As String, ByVal PWD As String, ByVal UserID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteUser", New Object() {UID, PWD, UserID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDeleteUser(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/UserGroups", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UserGroups(ByVal UID As String, ByVal PWD As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UserGroups", New Object() {UID, PWD})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginUserGroups(ByVal UID As String, ByVal PWD As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UserGroups", New Object() {UID, PWD}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndUserGroups(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRDOTNET/srv/DomainMembers", RequestNamespace:="http://tempuri.org/IRDOTNET/srv", ResponseNamespace:="http://tempuri.org/IRDOTNET/srv", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DomainMembers(ByVal UID As String, ByVal PWD As String, ByVal DomainID As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("DomainMembers", New Object() {UID, PWD, DomainID})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '<remarks/>
        Public Function BeginDomainMembers(ByVal UID As String, ByVal PWD As String, ByVal DomainID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DomainMembers", New Object() {UID, PWD, DomainID}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDomainMembers(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
    End Class
End Namespace
